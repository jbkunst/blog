{
  "hash": "3d90c22d5de400a7ec444886841cb19a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"valueBoxes and Sparklines\"\ndescription: \"The value boxes are a good way to get to the point quickly in a dashboard\n  showing the relevant value with a big font and eye-catching color. \n  But sometimes it would be better show that relevant number with a \n  related text, sparkline or information to give context of that value, or \n  just to compare it with the previoues ones. \n  In this post we'll show how to add sparklines to valueBox in shinydashboard\n  and other related packages.\"\ndate: 2020-06-29\ncategories: [shiny, highcharts, highcharter, htmlwidgets]\nimage: images/preview.png\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n_Post updated on Mar 26, 2024_\n\n## Introducction\n\nWhen you create a dashboard to track some information is usual put the important\nnumbers big and clear at the beginning of the main section. \nFor this, {shinydashboard} (https://rstudio.github.io/shinydashboard/) and other dashboard oriented\npackages for shiny like {bs4dash}, {argonDash}, {tablerDash} \n- all from https://rinterface.com/ - have an \nimplementation to put this type of information know as a _card_ or _value box_.\n\nIn some projects like https://jbkunst.shinyapps.io/trd-sttstcs/ I've implemented a\nmodification of the original `shinydashboard::valueBox`\nto complement the information (the BIG number) with a sparkline. Always\nthat implementation lives as a function in `R/helpers.R` script, so this will\nbe a good opportunity to share the code, thoughts and ideas. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png)\n:::\n:::\n\n\n## The basic `valueBox`\n\nLet's start with what we know: The most direct and simple implementation\nof a `valueBox` in {shinydashboard}.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(shinydashboard)\n\nvb <-  valueBox(\n  value = \"1,345\",\n  subtitle = \"Lines of code written\",\n  icon = icon(\"code\"),\n  width = 4,\n  color = \"red\",\n  href = NULL)\n\nui <- dashboardPage(\n  dashboardHeader(),\n  dashboardSidebar(disable = TRUE),\n  dashboardBody(\n    fluidRow(\n      valueBoxOutput(\"vbox\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  \n  output$vbox <- renderValueBox(vb)\n  \n}\n\n# shiny::shinyApp(ui, server, options = list(launch.browser = .rs.invokeShinyPaneViewer))\n```\n:::\n\n\nThis app looks like:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![The most simple value box](images/app1_vb.png){width=1954}\n:::\n:::\n\n\nSo here it is,  a simple value box to emphasize information which can have an \nicon/color to give some meaning to the number.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Apply some zoom](images/vb1.png){width=600}\n:::\n:::\n\n\n## Modifying the `valueBox`\n\nBefore to modify a value box we need to know what a `valueBox` is, or \nhow is it built, so take a look what is inside this funcion.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalueBox\n\nfunction(value, subtitle, icon = NULL, color = \"aqua\", width = 4, href = NULL){\n  \n  validateColor(color)\n  \n  if (!is.null(icon))\n    tagAssert(icon, type = \"i\")\n  \n  boxContent <- div(\n    class = paste0(\"small-box bg-\", color),\n    div(\n      class = \"inner\",\n      h3(value),\n      p(subtitle)\n      ),\n    if (!is.null(icon)) div(class = \"icon-large\", icon)\n    )\n  \n  if (!is.null(href)) \n    boxContent <- a(href = href, boxContent)\n    \n  div(\n    class = if (!is.null(width)) paste0(\"col-sm-\", width), \n    boxContent\n    )\n}\n```\n:::\n\n\nAs we see, the `value` and `subtitle` arguments are the main ones. The other are\njust for styling and format. These elements are in `div(class = \"inner\", ...)`\nso here we'll put the new content.\n\nLet's try to put a title in the top of the div and then use the subtitle as \nan detailed text.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalueBox2 <- function(value, title, subtitle, icon = NULL, color = \"aqua\", width = 4, href = NULL){\n  \n  shinydashboard:::validateColor(color)\n  \n  if (!is.null(icon))\n    shinydashboard:::tagAssert(icon, type = \"i\")\n  \n  boxContent <- div(\n    class = paste0(\"small-box bg-\", color),\n    div(\n      class = \"inner\",\n      tags$small(title),\n      h3(value),\n      p(subtitle)\n      ),\n    if (!is.null(icon)) div(class = \"icon-large\", icon)\n    )\n  \n  if (!is.null(href)) \n    boxContent <- a(href = href, boxContent)\n    \n  div(\n    class = if (!is.null(width)) paste0(\"col-sm-\", width), \n    boxContent\n    )\n}\n```\n:::\n\n\nSo the implementation is the same as the original `valueBox` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvb <- valueBox2(\n  value = \"1,345\",\n  title = toupper(\"Lines of code\"),\n  subtitle = tagList(HTML(\"&uarr;\"), \"25% Since last day\"),\n  icon = icon(\"code\"),\n  width = 4,\n  color = \"red\",\n  href = NULL\n  )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![A modificated value box](images/vb2.png){width=600}\n:::\n:::\n\n\nThe idea of put a title is to help the reader, but we use a small text to \nbe _subtle_, usually I like to use a _Small Caps_ font but in this case\nI used uppercase for simplicity.\n\n## Adding sparklines\n\nThe idea to add a sparkline to the value box is give more information. For example,\nif your have a historical data, it would be good put a sparkline to show the previous\nbehaviour about the data, so you can compare the _BIG_ number with the past.\n\nLet's simulate data to create a sparkline:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nN <- 20\n\nx <- cumsum(rnorm(N)) + 0.5 * cumsum(runif(N))\nx <- round(200*x)\n\ndf <- data.frame(\n  x = sort(as.Date(Sys.time() - lubridate::days(1:N))),\n  y = abs(x)\n)\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            x    y\n1  2024-03-06   98\n2  2024-03-07  102\n3  2024-03-08  251\n4  2024-03-09  302\n5  2024-03-10  343\n6  2024-03-11  700\n7  2024-03-12  815\n8  2024-03-13  609\n9  2024-03-14  498\n10 2024-03-15  495\n11 2024-03-16  744\n12 2024-03-17  860\n13 2024-03-18 1020\n14 2024-03-19 1055\n15 2024-03-20 1000\n16 2024-03-21 1378\n17 2024-03-22 1490\n18 2024-03-23 1172\n19 2024-03-24 1402\n20 2024-03-25 1345\n```\n\n\n:::\n:::\n\n\nLet's create a sparkline with {highcharter} package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(highcharter)\n\nhc <- hchart(df, \"line\", hcaes(x, y), name = \"lines of code\")  %>% \n  hc_size(height = 100)\n\nhc\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"htmlwidget-44474b3e8cd160f85a98\" style=\"width:100%;height:96px;\" class=\"highchart html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-44474b3e8cd160f85a98\">{\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"height\":100},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":\"y\"},\"type\":\"linear\"},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":false},\"treemap\":{\"layoutAlgorithm\":\"squarified\"},\"scatter\":{\"marker\":{\"symbol\":\"circle\"}}},\"series\":[{\"group\":\"group\",\"data\":[{\"x\":1709683200000,\"y\":98},{\"x\":1709769600000,\"y\":102},{\"x\":1709856000000,\"y\":251},{\"x\":1709942400000,\"y\":302},{\"x\":1710028800000,\"y\":343},{\"x\":1710115200000,\"y\":700},{\"x\":1710201600000,\"y\":815},{\"x\":1710288000000,\"y\":609},{\"x\":1710374400000,\"y\":498},{\"x\":1710460800000,\"y\":495},{\"x\":1710547200000,\"y\":744},{\"x\":1710633600000,\"y\":860},{\"x\":1710720000000,\"y\":1020},{\"x\":1710806400000,\"y\":1055},{\"x\":1710892800000,\"y\":1000},{\"x\":1710979200000,\"y\":1378},{\"x\":1711065600000,\"y\":1490},{\"x\":1711152000000,\"y\":1172},{\"x\":1711238400000,\"y\":1402},{\"x\":1711324800000,\"y\":1345}],\"type\":\"line\",\"name\":\"lines of code\"}],\"xAxis\":{\"type\":\"datetime\",\"title\":{\"text\":\"x\"},\"categories\":null}},\"theme\":{\"colors\":[\"#d35400\",\"#2980b9\",\"#2ecc71\",\"#f1c40f\",\"#2c3e50\",\"#7f8c8d\"],\"chart\":{\"style\":{\"fontFamily\":\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\"color\":\"#666666\"}},\"title\":{\"align\":\"left\",\"style\":{\"fontFamily\":\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\"fontWeight\":\"bold\"}},\"subtitle\":{\"align\":\"left\",\"style\":{\"fontFamily\":\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\"}},\"legend\":{\"align\":\"right\",\"verticalAlign\":\"bottom\",\"itemStyle\":{\"fontWeight\":\"normal\",\"color\":\"#A2A39C\"}},\"xAxis\":{\"gridLineWidth\":1,\"gridLineColor\":\"#F3F3F3\",\"lineColor\":\"#F3F3F3\",\"minorGridLineColor\":\"#F3F3F3\",\"tickColor\":\"#F3F3F3\",\"tickWidth\":1},\"yAxis\":{\"gridLineColor\":\"#F3F3F3\",\"lineColor\":\"#F3F3F3\",\"minorGridLineColor\":\"#F3F3F3\",\"tickColor\":\"#F3F3F3\",\"tickWidth\":1},\"plotOptions\":{\"line\":{\"marker\":{\"enabled\":false}},\"spline\":{\"marker\":{\"enabled\":false}},\"area\":{\"marker\":{\"enabled\":false}},\"areaspline\":{\"marker\":{\"enabled\":false}},\"arearange\":{\"marker\":{\"enabled\":false}},\"bubble\":{\"maxSize\":\"10%\"}},\"credits\":{\"style\":{\"fontFamily\":\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\"}}},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":\"-apple-system,+BlinkMacSystemFont,+\\\"Segoe+UI\\\",+Roboto,+Helvetica,+Arial,+\\\"Apple+Color+Emoji\\\",+\\\"Segoe+UI+Emoji\\\",+\\\"Segoe+UI+Symbol\\\"\",\"debug\":false},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nWe have our first sparkline. It's important note the `hc` object will use\nthe available horizontal (`width`) space, but we need to control the `heigth`.\n\nNow we can create a new `valueBox` function;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalueBox3 <- function(value, title, sparkobj = NULL, subtitle, icon = NULL,\n                      color = \"aqua\", width = 4, href = NULL){\n  \n  shinydashboard:::validateColor(color)\n  \n  if (!is.null(icon))\n    shinydashboard:::tagAssert(icon, type = \"i\")\n  \n  boxContent <- div(\n    class = paste0(\"small-box bg-\", color),\n    div(\n      class = \"inner\",\n      tags$small(title),\n      h3(value),\n      if (!is.null(sparkobj)) sparkobj,\n      p(subtitle)\n      ),\n    if (!is.null(icon)) div(class = \"icon-large\", icon, style = \"z-index; 0\")\n    )\n  \n  if (!is.null(href)) \n    boxContent <- a(href = href, boxContent)\n    \n  div(\n    class = if (!is.null(width)) paste0(\"col-sm-\", width), \n    boxContent\n    )\n}\n```\n:::\n\n\nSo now:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvb <- valueBox3(\n  value = \"1,345\",\n  title = toupper(\"Lines of code\"),\n  sparkobj = hc,\n  subtitle = tagList(HTML(\"&uarr;\"), \"25% Since last day\"),\n  icon = icon(\"code\"),\n  width = 4,\n  color = \"red\",\n  href = NULL)\n```\n:::\n\n\nAnd the result is:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![A value box with a sparkline using a bad theme](images/vb3.png){width=600}\n:::\n:::\n\n\nLOL! We need modify the look of the chart. For this we'll create a custom theme.\nThe general idea is gain space via removing axis and borders. Then have cleaner\nlook removing grid lines... You know, show _just_ the line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc_theme_sparkline_vb <- function(...) {\n  \n  theme <- list(\n    chart = list(\n      backgroundColor = NULL,\n      margins = c(0, 0, 0, 0),\n      spacingTop = 0,\n      spacingRight = 0,\n      spacingBottom = 0,\n      spacingLeft = 0,\n      plotBorderWidth = 0,\n      borderWidth = 0,\n      style = list(overflow = \"visible\")\n    ),\n    xAxis = list(\n      visible = FALSE, \n      endOnTick = FALSE, \n      startOnTick = FALSE\n    ),\n    yAxis = list(\n      visible = FALSE,\n      endOnTick = FALSE, \n      startOnTick = FALSE\n    ),\n    tooltip = list(\n      outside = FALSE,\n      shadow = FALSE,\n      borderColor = \"transparent\",\n      botderWidth = 0,\n      backgroundColor = \"transparent\",\n      style = list(textOutline = \"5px white\")\n    ),\n    plotOptions = list(\n      series = list(\n        marker = list(enabled = FALSE),\n        lineWidth = 2,\n        shadow = FALSE,\n        fillOpacity = 0.25,\n        color = \"#FFFFFFBF\",\n        fillColor = list(\n          linearGradient = list(x1 = 0, y1 = 1, x2 = 0, y2 = 0),\n          stops = list(\n            list(0.00, \"#FFFFFF00\"),\n            list(0.50, \"#FFFFFF7F\"),\n            list(1.00, \"#FFFFFFFF\")\n          )\n        )\n      )\n    ),\n    credits = list(\n      enabled = FALSE,\n      text = \"\"\n      )\n    )\n  \n  theme <- structure(theme, class = \"hc_theme\")\n  \n  if (length(list(...)) > 0) {\n    theme <- hc_theme_merge(\n      theme,\n      hc_theme(...)\n    )\n  }\n  \n  theme\n}\n```\n:::\n\n\nTesting the theme.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- hc %>% \n  hc_add_theme(hc_theme_sparkline_vb()) %>% \n  hc_credits(enabled = FALSE)\n\nhc %>% \n  # emulate the background color of the valueBox\n  hc_chart(backgroundColor = \"#DD4B39\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"htmlwidget-5d05eac75555269eefd0\" style=\"width:100%;height:225px;\" class=\"highchart html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5d05eac75555269eefd0\">{\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"height\":100,\"backgroundColor\":\"#DD4B39\"},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":\"y\"},\"type\":\"linear\"},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":false},\"treemap\":{\"layoutAlgorithm\":\"squarified\"},\"scatter\":{\"marker\":{\"symbol\":\"circle\"}}},\"series\":[{\"group\":\"group\",\"data\":[{\"x\":1709683200000,\"y\":98},{\"x\":1709769600000,\"y\":102},{\"x\":1709856000000,\"y\":251},{\"x\":1709942400000,\"y\":302},{\"x\":1710028800000,\"y\":343},{\"x\":1710115200000,\"y\":700},{\"x\":1710201600000,\"y\":815},{\"x\":1710288000000,\"y\":609},{\"x\":1710374400000,\"y\":498},{\"x\":1710460800000,\"y\":495},{\"x\":1710547200000,\"y\":744},{\"x\":1710633600000,\"y\":860},{\"x\":1710720000000,\"y\":1020},{\"x\":1710806400000,\"y\":1055},{\"x\":1710892800000,\"y\":1000},{\"x\":1710979200000,\"y\":1378},{\"x\":1711065600000,\"y\":1490},{\"x\":1711152000000,\"y\":1172},{\"x\":1711238400000,\"y\":1402},{\"x\":1711324800000,\"y\":1345}],\"type\":\"line\",\"name\":\"lines of code\"}],\"xAxis\":{\"type\":\"datetime\",\"title\":{\"text\":\"x\"},\"categories\":null}},\"theme\":{\"chart\":{\"backgroundColor\":null,\"margins\":[0,0,0,0],\"spacingTop\":0,\"spacingRight\":0,\"spacingBottom\":0,\"spacingLeft\":0,\"plotBorderWidth\":0,\"borderWidth\":0,\"style\":{\"overflow\":\"visible\"}},\"xAxis\":{\"visible\":false,\"endOnTick\":false,\"startOnTick\":false},\"yAxis\":{\"visible\":false,\"endOnTick\":false,\"startOnTick\":false},\"tooltip\":{\"outside\":false,\"shadow\":false,\"borderColor\":\"transparent\",\"botderWidth\":0,\"backgroundColor\":\"transparent\",\"style\":{\"textOutline\":\"5px white\"}},\"plotOptions\":{\"series\":{\"marker\":{\"enabled\":false},\"lineWidth\":2,\"shadow\":false,\"fillOpacity\":0.25,\"color\":\"#FFFFFFBF\",\"fillColor\":{\"linearGradient\":{\"x1\":0,\"y1\":1,\"x2\":0,\"y2\":0},\"stops\":[[0,\"#FFFFFF00\"],[0.5,\"#FFFFFF7F\"],[1,\"#FFFFFFFF\"]]}}},\"credits\":{\"enabled\":false,\"text\":\"\"}},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":\"-apple-system,+BlinkMacSystemFont,+\\\"Segoe+UI\\\",+Roboto,+Helvetica,+Arial,+\\\"Apple+Color+Emoji\\\",+\\\"Segoe+UI+Emoji\\\",+\\\"Segoe+UI+Symbol\\\"\",\"debug\":false},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nAnd trying again:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvb <- valueBox3(\n  value = \"1,345\",\n  title = toupper(\"Lines of code\"),\n  sparkobj = hc,\n  subtitle = tagList(HTML(\"&uarr;\"), \"25% Since last day\"),\n  icon = icon(\"code\"),\n  width = 4,\n  color = \"red\",\n  href = NULL)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![A value box with a proper sparkline](images/vb4.png){width=600}\n:::\n:::\n\n\n## Including an information helper \n\nSometimes I like to add helper information icon to explain how to read the \nmetric/number if is needed.\n\nThis can be done using the icon `\"info-cirle\"` and using the class `\"pull-right\"`\nto put in the corner.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalueBox4 <- function(value, title, sparkobj = NULL, subtitle, info = NULL, \n                      icon = NULL, color = \"aqua\", width = 4, href = NULL){\n  \n  shinydashboard:::validateColor(color)\n  \n  if (!is.null(icon))\n    shinydashboard:::tagAssert(icon, type = \"i\")\n  \n  info_icon <- tags$small(\n    tags$i(\n      class = \"fa fa-info-circle fa-lg\",\n      title = info,\n      `data-toggle` = \"tooltip\",\n      style = \"color: rgba(255, 255, 255, 0.75);\"\n      ),\n    class = \"pull-right\"\n    )\n  \n  boxContent <- div(\n    class = paste0(\"small-box bg-\", color),\n    div(\n      class = \"inner\",\n      tags$small(title),\n      if (!is.null(sparkobj)) info_icon,\n      h3(value),\n      if (!is.null(sparkobj)) sparkobj,\n      p(subtitle)\n      ),\n    if (!is.null(icon)) div(class = \"icon-large\", icon, style = \"z-index; 0\")\n    )\n  \n  if (!is.null(href)) \n    boxContent <- a(href = href, boxContent)\n    \n  div(\n    class = if (!is.null(width)) paste0(\"col-sm-\", width), \n    boxContent\n    )\n}\n```\n:::\n\n\nSo now:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvb <- valueBox4(\n  value = \"1,345\",\n  title = toupper(\"Lines of code\"),\n  sparkobj = hc,\n  subtitle = tagList(HTML(\"&uarr;\"), \"25% Since last day\"),\n  info = \"This is the lines of code I've written in the past 20 days! That's a lot, right?\",\n  icon = icon(\"code\"),\n  width = 4,\n  color = \"red\",\n  href = NULL\n  )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![A value box with helper text on hover](images/vb5.png){width=600}\n:::\n:::\n\n\n_Voilà_ we have a value box with a information helper.\n\n## Demo\n\nDemo section! We can use other types of charts, texts and colors:\n\nBefore the demo, let's give a proper name to our function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalueBoxSpark <- function(value, title, sparkobj = NULL, subtitle, info = NULL, \n                          icon = NULL, color = \"aqua\", width = 4, href = NULL){\n  \n  shinydashboard:::validateColor(color)\n  \n  if (!is.null(icon))\n    shinydashboard:::tagAssert(icon, type = \"i\")\n  \n  info_icon <- tags$small(\n    tags$i(\n      class = \"fa fa-info-circle fa-lg\",\n      title = info,\n      `data-toggle` = \"tooltip\",\n      style = \"color: rgba(255, 255, 255, 0.75);\"\n      ),\n    # bs3 pull-right \n    # bs4 float-right\n    class = \"pull-right float-right\"\n    )\n  \n  boxContent <- div(\n    class = paste0(\"small-box bg-\", color),\n    div(\n      class = \"inner\",\n      tags$small(title),\n      if (!is.null(sparkobj)) info_icon,\n      h3(value),\n      if (!is.null(sparkobj)) sparkobj,\n      p(subtitle)\n      ),\n    # bs3 icon-large\n    # bs4 icon\n    if (!is.null(icon)) div(class = \"icon-large icon\", icon, style = \"z-index; 0\")\n    )\n  \n  if (!is.null(href)) \n    boxContent <- a(href = href, boxContent)\n    \n  div(\n    class = if (!is.null(width)) paste0(\"col-sm-\", width), \n    boxContent\n    )\n}\n```\n:::\n\n\nSome charts:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- hchart(df, \"area\", hcaes(x, y), name = \"lines of code\")  %>% \n  hc_size(height = 100) %>% \n  hc_credits(enabled = FALSE) %>% \n  hc_add_theme(hc_theme_sparkline_vb()) \n\nhc2 <- hchart(df, \"line\", hcaes(x, y), name = \"Distance\")  %>% \n  hc_size(height = 100) %>% \n  hc_credits(enabled = FALSE) %>% \n  hc_add_theme(hc_theme_sparkline_vb()) \n\nhc3 <- hchart(df, \"column\", hcaes(x, y), name = \"Daily amount\")  %>% \n  hc_size(height = 100) %>% \n  hc_credits(enabled = FALSE) %>% \n  hc_add_theme(hc_theme_sparkline_vb()) \n```\n:::\n\n\nSome value boxes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvb <- valueBoxSpark(\n  value = \"1,345\",\n  title = toupper(\"Lines of code written\"),\n  sparkobj = hc,\n  subtitle = tagList(HTML(\"&uarr;\"), \"25% Since last day\"),\n  info = \"This is the lines of code I've written in the past 20 days! That's a lot, right?\",\n  icon = icon(\"code\"),\n  width = 4,\n  color = \"teal\",\n  href = NULL\n  )\n\nvb2 <- valueBoxSpark(\n  value = \"1,345 KM\",\n  title = toupper(\"Distance Traveled\"),\n  sparkobj = hc2,\n  subtitle = tagList(HTML(\"&uarr;\"), \"25% Since last month\"),\n  info = \"This is the lines of code I've written in the past 20 days! That's a lot, right?\",\n  icon = icon(\"plane\"),\n  width = 4,\n  color = \"red\",\n  href = NULL\n  )\n\nvb3 <- valueBoxSpark(\n  value = \"1,3 Hrs.\",\n  title = toupper(\"Thinking time\"),\n  sparkobj = hc3,\n  subtitle = tagList(HTML(\"&uarr;\"), \"5% Since last year\"),\n  info = \"This is the lines of code I've written in the past 20 days! That's a lot, right?\",\n  icon = icon(\"hourglass-half\"),\n  width = 4,\n  color = \"yellow\",\n  href = NULL\n  )\n```\n:::\n\n\nFinally the app:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(shinydashboard)\n\nui <- dashboardPage(\n  dashboardHeader(),\n  dashboardSidebar(disable = TRUE),\n  dashboardBody(\n    fluidRow(\n      valueBoxOutput(\"vbox\"),\n      valueBoxOutput(\"vbox2\"),\n      valueBoxOutput(\"vbox3\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  output$vbox <- renderValueBox(vb)\n  output$vbox2 <- renderValueBox(vb2)\n  output$vbox3 <- renderValueBox(vb3)\n}\n\n# shiny::shinyApp(ui, server, options = list(launch.browser = .rs.invokeShinyPaneViewer))\n```\n:::\n\n\nThis app look like this :)! What do you think?\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Awesome new value boxes](images/app2_vb.png){width=1954}\n:::\n:::\n\n\n## Extending the idea\n\nDue the {bs4dash} package is based in the same template of the {shinydashboard}\nhttps://github.com/ColorlibHQ/AdminLTE is direct use the functions. There some\ndetails in the info icon, but you can remove it if you use `icon = NULL`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bs4Dash)\n\nui <- bs4DashPage(\n  header = dashboardHeader(),\n  sidebar = bs4DashSidebar(disable = TRUE),\n  body = bs4DashBody(\n    # this is for use tooltips in the bs4dash package\n    tags$script(HTML(\"setInterval(function(){ $('[title]').tooltip(); }, 1000)\")),\n    tags$h2(\"Testing with {bs4dash} package\"),\n    tags$hr(),\n    fluidRow(\n      valueBoxOutput(\"vbox\"),\n      valueBoxOutput(\"vbox2\"),\n      valueBoxOutput(\"vbox3\")\n      )\n    )\n  )\n\n# setTimeout(function(){ $('[title]').tooltip(); }, 3000)\n# setInterval(function(){ $('[title]').tooltip(); }, 3000)\n# JS(\"$(function () { $('[title]').tooltip() })\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Work with the {bs4dash} package too](images/app3_vb.png){width=1984}\n:::\n:::\n\n\nThis walkthrough/tutorial will help to implement sparklines in other packages \nas well as other elements such as `infoBox`, or maybe with other htmlwidgets \nlike {echarts4r} or {plotly}. So if you make an implementation \nplease tell us and share with other people. \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<script src=\"../../site_libs/proj4js-2.3.15/proj4.js\"></script>\n<link href=\"../../site_libs/highcharts-9.3.1/css/motion.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/highcharts-9.3.1/highcharts.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/highcharts-3d.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/highcharts-more.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/stock.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/map.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/data.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/exporting.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/offline-exporting.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/drilldown.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/item-series.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/overlapping-datalabels.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/annotations.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/export-data.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/funnel.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/heatmap.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/treemap.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/sankey.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/dependency-wheel.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/organization.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/solid-gauge.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/streamgraph.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/sunburst.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/vector.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/wordcloud.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/xrange.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/tilemap.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/venn.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/gantt.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/timeline.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/parallel-coordinates.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/bullet.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/coloraxis.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/dumbbell.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/lollipop.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/series-label.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/plugins/motion.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/custom/reset.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/boost.js\"></script>\n<script src=\"../../site_libs/highchart-binding-0.9.4/highchart.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}